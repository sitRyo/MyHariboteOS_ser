     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  section .text
     5                                  		GLOBAL	io_hlt, io_cli, io_sti, io_stihlt
     6                                  		GLOBAL	io_in8,  io_in16,  io_in32
     7                                  		GLOBAL	io_out8, io_out16, io_out32
     8                                  		GLOBAL	io_load_eflags, io_store_eflags
     9                                  		GLOBAL  load_gdtr, load_idtr
    10                                  		GLOBAL  asm_inthandler21, asm_inthandler27, asm_inthandler2c
    11                                  		EXTERN  inthandler21, inthandler27, inthandler2c
    12                                  
    13                                  io_hlt:	; void io_hlt(void);
    14 00000000 F4                      		HLT
    15 00000001 C3                      		RET
    16                                  
    17                                  io_cli:	; void io_cli(void);
    18 00000002 FA                      		CLI
    19 00000003 C3                      		RET
    20                                  
    21                                  io_sti:	; void io_sti(void);
    22 00000004 FB                      		STI
    23 00000005 C3                      		RET
    24                                  
    25                                  io_stihlt:	; void io_stihlt(void);
    26 00000006 FB                      		STI
    27 00000007 F4                      		HLT
    28 00000008 C3                      		RET
    29                                  
    30                                  io_in8:	; int io_in8(int port);
    31 00000009 8B542404                		MOV		EDX,[ESP+4]		; port
    32 0000000D B800000000              		MOV		EAX,0
    33 00000012 EC                      		IN		AL,DX
    34 00000013 C3                      		RET
    35                                  
    36                                  io_in16:	; int io_in16(int port);
    37 00000014 8B542404                		MOV		EDX,[ESP+4]		; port
    38 00000018 B800000000              		MOV		EAX,0
    39 0000001D 66ED                    		IN		AX,DX
    40 0000001F C3                      		RET
    41                                  
    42                                  io_in32:	; int io_in32(int port);
    43 00000020 8B542404                		MOV		EDX,[ESP+4]		; port
    44 00000024 ED                      		IN		EAX,DX
    45 00000025 C3                      		RET
    46                                  
    47                                  io_out8:	; void io_out8(int port, int data);
    48 00000026 8B542404                		MOV		EDX,[ESP+4]		; port
    49 0000002A 8A442408                		MOV		AL,[ESP+8]		; data
    50 0000002E EE                      		OUT		DX,AL
    51 0000002F C3                      		RET
    52                                  
    53                                  io_out16:	; void io_out16(int port, int data);
    54 00000030 8B542404                		MOV		EDX,[ESP+4]		; port
    55 00000034 8B442408                		MOV		EAX,[ESP+8]		; data
    56 00000038 66EF                    		OUT		DX,AX
    57 0000003A C3                      		RET
    58                                  
    59                                  io_out32:	; void io_out32(int port, int data);
    60 0000003B 8B542404                		MOV		EDX,[ESP+4]		; port
    61 0000003F 8B442408                		MOV		EAX,[ESP+8]		; data
    62 00000043 EF                      		OUT		DX,EAX
    63 00000044 C3                      		RET
    64                                  
    65                                  io_load_eflags:	; int io_load_eflags(void);
    66 00000045 9C                      		PUSHFD		; PUSH EFLAGS �Ƃ����Ӗ�
    67 00000046 58                      		POP		EAX
    68 00000047 C3                      		RET
    69                                  
    70                                  io_store_eflags:	; void io_store_eflags(int eflags);
    71 00000048 8B442404                		MOV		EAX,[ESP+4]
    72 0000004C 50                      		PUSH	EAX
    73 0000004D 9D                      		POPFD		; POP EFLAGS �Ƃ����Ӗ�
    74 0000004E C3                      		RET
    75                                  
    76                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    77 0000004F 668B442404              		MOV		AX,[ESP+4]		; limit
    78 00000054 6689442406              		MOV		[ESP+6],AX
    79 00000059 0F01542406              		LGDT	[ESP+6]
    80 0000005E C3                      		RET
    81                                  
    82                                  load_idtr:		; void load_idtr(int limit, int addr);
    83 0000005F 668B442404              		MOV		AX,[ESP+4]		; limit
    84 00000064 6689442406              		MOV		[ESP+6],AX
    85 00000069 0F015C2406              		LIDT	[ESP+6]
    86 0000006E C3                      		RET
    87                                  
    88                                  asm_inthandler21:
    89 0000006F 06                      		PUSH	ES
    90 00000070 1E                      		PUSH	DS
    91 00000071 60                      		PUSHAD
    92 00000072 89E0                    		MOV		EAX,ESP
    93 00000074 50                      		PUSH	EAX ; レジスタを番地のメモリに退避
    94 00000075 668CD0                  		MOV		AX,SS
    95 00000078 8ED8                    		MOV		DS,AX
    96 0000007A 8EC0                    		MOV		ES,AX
    97 0000007C E8(00000000)            		CALL	inthandler21
    98 00000081 58                      		POP		EAX
    99 00000082 61                      		POPAD
   100 00000083 1F                      		POP		DS
   101 00000084 07                      		POP		ES
   102 00000085 CF                      		IRETD ; 割り込みからの復帰
   103                                  
   104                                  asm_inthandler27:
   105 00000086 06                      		PUSH	ES
   106 00000087 1E                      		PUSH	DS
   107 00000088 60                      		PUSHAD
   108 00000089 89E0                    		MOV		EAX,ESP
   109 0000008B 50                      		PUSH	EAX
   110 0000008C 668CD0                  		MOV		AX,SS
   111 0000008F 8ED8                    		MOV		DS,AX
   112 00000091 8EC0                    		MOV		ES,AX
   113 00000093 E8(00000000)            		CALL	inthandler27
   114 00000098 58                      		POP		EAX
   115 00000099 61                      		POPAD
   116 0000009A 1F                      		POP		DS
   117 0000009B 07                      		POP		ES
   118 0000009C CF                      		IRETD
   119                                  
   120                                  asm_inthandler2c:
   121 0000009D 06                      		PUSH	ES
   122 0000009E 1E                      		PUSH	DS
   123 0000009F 60                      		PUSHAD
   124 000000A0 89E0                    		MOV		EAX,ESP
   125 000000A2 50                      		PUSH	EAX
   126 000000A3 668CD0                  		MOV		AX,SS
   127 000000A6 8ED8                    		MOV		DS,AX
   128 000000A8 8EC0                    		MOV		ES,AX
   129 000000AA E8(00000000)            		CALL	inthandler2c
   130 000000AF 58                      		POP		EAX
   131 000000B0 61                      		POPAD
   132 000000B1 1F                      		POP		DS
   133 000000B2 07                      		POP		ES
   134 000000B3 CF                      		IRETD
