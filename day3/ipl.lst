     1                                  ; haribote-ipl
     2                                  ; tab=2
     3                                  
     4                                    org 0x7c00 
     5                                    ; org命令 このプログラムがどこに読み込まれるかを指定する。
     6                                    ; 0x7c00 は補助記憶装置の先頭にある特殊な領域。コンピュータが起動する一番最初に読み込まれる部分。
     7                                  
     8 00000000 EB4E                      jmp entry
     9 00000002 90                        db 0x90 
    10 00000003 48415249424F5445          db "HARIBOTE" ; ブートセクタの名前
    11 0000000B 0002                      dw 512 ; 1セクタの大きさ
    12 0000000D 01                        db 1 ; クラスタの大きさ
    13 0000000E 0100                      dw 1 ; FATがどこから始まるか
    14 00000010 02                        db 2 ; FATの個数
    15 00000011 E000                      dw 224 ; ルートディレクトリ領域の大きさ
    16 00000013 400B                      dw 2880 ; このドライブの大きさ (2880にしなければいけない)
    17 00000015 F0                        db 0xf0 ; メディアのタイプ
    18 00000016 0900                      dw 9 ; FAT領域の長さ
    19 00000018 1200                      dw 18 ; 1トラックにいくつのセクタがあるか
    20 0000001A 0200                      dw 2 ; ヘッドの数
    21 0000001C 00000000                  dd 0 ; パーティションを使っていないので必ず0にする
    22 00000020 400B0000                  dd 2880 ; このドライブの大きさをもう1度書く
    23 00000024 000029                    db 0,0,0x29 ; よくわからないらしい
    24 00000027 FFFFFFFF                  dd 0xffffffff ; シリアルナンバー?
    25 0000002B 48415249424F54454F-       db "HARIBOTEOS " ; ディスクの名前
    25 00000034 5320               
    26 00000036 4641543132202020          db "FAT12   " ; フォーマットの名前
    27 0000003E 00<rept>                  times 18 db 0 ; 18byte開けておく。
    28                                  
    29                                  entry:
    30 00000050 B80000                    mov ax,0 ; レジスタ初期化
    31 00000053 8ED0                      mov ss,ax ; ssは直接数値を代入できないので、慣習でaxを介して初期化している。
    32 00000055 BC007C                    mov sp,0x7c00 ; スタックポインタを0x7c00に
    33 00000058 8ED8                      mov ds,ax ; 0に初期化ds:なので
    34 0000005A 8EC0                      mov es,ax
    35                                  
    36 0000005C BE[7300]                  mov si,msg ; siにmsgに入れる。
    37                                  putloop:
    38 0000005F 8A04                      mov al,[si] ; int 0x0eではalに表示したい文字を入れる
    39 00000061 83C601                    add si,1 ; siをインクリメント. msgのポインタが1個ずれる
    40 00000064 3C00                      cmp al,0 ; null文字にあったら終わり
    41 00000066 0F849601                  je fin
    42 0000006A B40E                      mov ah,0x0e ; 1文字表示(int) 
    43 0000006C BB0F00                    mov bx,15 ; color code
    44 0000006F CD10                      int 0x10 ; 割り込み
    45 00000071 EBEC                      jmp putloop
    46                                  msg:
    47 00000073 0A0A                      db 0x0a, 0x0a ; 改行を2つ
    48 00000075 68656C6C6F2C20776F-       db "hello, world!" ; メッセージ
    48 0000007E 726C6421           
    49 00000082 0A                        db 0x0a
    50 00000083 00                        db 0 ; null文字
    51                                    
    52 00000084 00<rept>                  times 0x01fe - ($-$$) db 0 
    53                                  
    54 000001FE 55AA                      db 0x55, 0xaa ; boot sectorであることを保証する
    55                                  fin:
    56 00000200 F4                        hlt
    57 00000201 EBFD                      jmp fin
