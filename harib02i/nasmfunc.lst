     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  section .text
     5                                  		GLOBAL	io_hlt, io_cli, io_sti, io_stihlt
     6                                  		GLOBAL	io_in8,  io_in16,  io_in32
     7                                  		GLOBAL	io_out8, io_out16, io_out32
     8                                  		GLOBAL	io_load_eflags, io_store_eflags
     9                                  		GLOBAL  load_gdtr, load_idtr
    10                                  
    11                                  io_hlt:	; void io_hlt(void);
    12 00000000 F4                      		HLT
    13 00000001 C3                      		RET
    14                                  
    15                                  io_cli:	; void io_cli(void);
    16 00000002 FA                      		CLI
    17 00000003 C3                      		RET
    18                                  
    19                                  io_sti:	; void io_sti(void);
    20 00000004 FB                      		STI
    21 00000005 C3                      		RET
    22                                  
    23                                  io_stihlt:	; void io_stihlt(void);
    24 00000006 FB                      		STI
    25 00000007 F4                      		HLT
    26 00000008 C3                      		RET
    27                                  
    28                                  io_in8:	; int io_in8(int port);
    29 00000009 8B542404                		MOV		EDX,[ESP+4]		; port
    30 0000000D B800000000              		MOV		EAX,0
    31 00000012 EC                      		IN		AL,DX
    32 00000013 C3                      		RET
    33                                  
    34                                  io_in16:	; int io_in16(int port);
    35 00000014 8B542404                		MOV		EDX,[ESP+4]		; port
    36 00000018 B800000000              		MOV		EAX,0
    37 0000001D 66ED                    		IN		AX,DX
    38 0000001F C3                      		RET
    39                                  
    40                                  io_in32:	; int io_in32(int port);
    41 00000020 8B542404                		MOV		EDX,[ESP+4]		; port
    42 00000024 ED                      		IN		EAX,DX
    43 00000025 C3                      		RET
    44                                  
    45                                  io_out8:	; void io_out8(int port, int data);
    46 00000026 8B542404                		MOV		EDX,[ESP+4]		; port
    47 0000002A 8A442408                		MOV		AL,[ESP+8]		; data
    48 0000002E EE                      		OUT		DX,AL
    49 0000002F C3                      		RET
    50                                  
    51                                  io_out16:	; void io_out16(int port, int data);
    52 00000030 8B542404                		MOV		EDX,[ESP+4]		; port
    53 00000034 8B442408                		MOV		EAX,[ESP+8]		; data
    54 00000038 66EF                    		OUT		DX,AX
    55 0000003A C3                      		RET
    56                                  
    57                                  io_out32:	; void io_out32(int port, int data);
    58 0000003B 8B542404                		MOV		EDX,[ESP+4]		; port
    59 0000003F 8B442408                		MOV		EAX,[ESP+8]		; data
    60 00000043 EF                      		OUT		DX,EAX
    61 00000044 C3                      		RET
    62                                  
    63                                  io_load_eflags:	; int io_load_eflags(void);
    64 00000045 9C                      		PUSHFD		; PUSH EFLAGS �Ƃ����Ӗ�
    65 00000046 58                      		POP		EAX
    66 00000047 C3                      		RET
    67                                  
    68                                  io_store_eflags:	; void io_store_eflags(int eflags);
    69 00000048 8B442404                		MOV		EAX,[ESP+4]
    70 0000004C 50                      		PUSH	EAX
    71 0000004D 9D                      		POPFD		; POP EFLAGS �Ƃ����Ӗ�
    72 0000004E C3                      		RET
    73                                  
    74                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    75 0000004F 668B442404              		MOV		AX,[ESP+4]		; limit
    76 00000054 6689442406              		MOV		[ESP+6],AX
    77 00000059 0F01542406              		LGDT	[ESP+6]
    78 0000005E C3                      		RET
    79                                  
    80                                  load_idtr:		; void load_idtr(int limit, int addr);
    81 0000005F 668B442404              		MOV		AX,[ESP+4]		; limit
    82 00000064 6689442406              		MOV		[ESP+6],AX
    83 00000069 0F015C2406              		LIDT	[ESP+6]
    84 0000006E C3                      		RET
