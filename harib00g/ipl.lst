     1                                  ; haribote-ipl
     2                                  ; TAB=4
     3                                  
     4                                  CYLS	EQU		10				; どこまで読み込むか
     5                                  
     6                                  		ORG		0x7c00			; このプログラムがどこに読み込まれるのか
     7                                  
     8                                  ; 以下は標準的なFAT12フォーマットフロッピーディスクのための記述
     9                                  
    10 00000000 EB4C                    		JMP		entry
    11 00000002 90                      		DB		0x90
    12 00000003 48415249424F5445        		DB		"HARIBOTE"		; ブートセクタの名前を自由に書いてよい（8バイト）
    13 0000000B 0002                    		DW		512				; 1セクタの大きさ（512にしなければいけない）
    14 0000000D 01                      		DB		1				; クラスタの大きさ（1セクタにしなければいけない）
    15 0000000E 0100                    		DW		1				; FATがどこから始まるか（普通は1セクタ目からにする）
    16 00000010 02                      		DB		2				; FATの個数（2にしなければいけない）
    17 00000011 E000                    		DW		224				; ルートディレクトリ領域の大きさ（普通は224エントリにする）
    18 00000013 400B                    		DW		2880			; このドライブの大きさ（2880セクタにしなければいけない）
    19 00000015 F0                      		DB		0xf0			; メディアのタイプ（0xf0にしなければいけない）
    20 00000016 0900                    		DW		9				; FAT領域の長さ（9セクタにしなければいけない）
    21 00000018 1200                    		DW		18				; 1トラックにいくつのセクタがあるか（18にしなければいけない）
    22 0000001A 0200                    		DW		2				; ヘッドの数（2にしなければいけない）
    23 0000001C 00000000                		DD		0				; パーティションを使ってないのでここは必ず0
    24 00000020 400B0000                		DD		2880			; このドライブ大きさをもう一度書く
    25 00000024 000029                  		DB		0,0,0x29		; よくわからないけどこの値にしておくといいらしい
    26 00000027 FFFFFFFF                		DD		0xffffffff		; たぶんボリュームシリアル番号
    27 0000002B 48415249424F54454F-     		DB		"HARIBOTEOS "	; ディスクの名前（11バイト）
    27 00000034 5320               
    28 00000036 4641543132202020        		DB		"FAT12   "		; フォーマットの名前（8バイト）
    29 0000003E 00<rept>                		times 16 DB 0
    30                                  
    31                                  ; プログラム本体
    32                                  
    33                                  entry:
    34 0000004E B80000                  		MOV		AX,0			; レジスタ初期化
    35 00000051 8ED0                    		MOV		SS,AX
    36 00000053 BC007C                  		MOV		SP,0x7c00
    37 00000056 8ED8                    		MOV		DS,AX
    38                                  
    39                                  ; ディスクを読む
    40                                  
    41 00000058 B82008                  		MOV		AX,0x0820
    42 0000005B 8EC0                    		MOV		ES,AX
    43 0000005D B500                    		MOV		CH,0			; シリンダ0
    44 0000005F B600                    		MOV		DH,0			; ヘッド0
    45 00000061 B102                    		MOV		CL,2			; セクタ2
    46                                  readloop:
    47 00000063 BE0000                  		MOV		SI,0			; 失敗回数を数えるレジスタ
    48                                  retry:
    49 00000066 B402                    		MOV		AH,0x02			; AH=0x02 : ディスク読み込み
    50 00000068 B001                    		MOV		AL,1			; 1セクタ
    51 0000006A BB0000                  		MOV		BX,0
    52 0000006D B200                    		MOV		DL,0x00			; Aドライブ
    53 0000006F CD13                    		INT		0x13			; ディスクBIOS呼び出し
    54 00000071 7310                    		JNC		next			; エラーがおきなければnextへ
    55 00000073 83C601                  		ADD		SI,1			; SIに1を足す
    56 00000076 83FE05                  		CMP		SI,5			; SIと5を比較
    57 00000079 732E                    		JAE		error			; SI >= 5 だったらerrorへ
    58 0000007B B400                    		MOV		AH,0x00
    59 0000007D B200                    		MOV		DL,0x00			; Aドライブ
    60 0000007F CD13                    		INT		0x13			; ドライブのリセット
    61 00000081 EBE3                    		JMP		retry
    62                                  next:
    63 00000083 8CC0                    		MOV		AX,ES			; アドレスを0x200進める
    64 00000085 83C020                  		ADD		AX,0x0020
    65 00000088 8EC0                    		MOV		ES,AX			; ADD ES,0x020 という命令がないのでこうしている
    66 0000008A 80C101                  		ADD		CL,1			; CLに1を足す
    67 0000008D 80F912                  		CMP		CL,18			; CLと18を比較
    68 00000090 76D1                    		JBE		readloop		; CL <= 18 だったらreadloopへ
    69 00000092 B101                    		MOV		CL,1
    70 00000094 80C601                  		ADD		DH,1
    71 00000097 80FE02                  		CMP		DH,2
    72 0000009A 72C7                    		JB		readloop		; DH < 2 だったらreadloopへ
    73 0000009C B600                    		MOV		DH,0
    74 0000009E 80C501                  		ADD		CH,1
    75 000000A1 80FD0A                  		CMP		CH,CYLS
    76 000000A4 72BD                    		JB		readloop		; CH < CYLS だったらreadloopへ
    77                                  
    78 000000A6 E9(00C2)                		JMP   0xc200
    79                                  
    80                                  error:
    81 000000A9 BE[C100]                		MOV		SI,msg
    82                                  putloop:
    83 000000AC 8A04                    		MOV		AL,[SI]
    84 000000AE 83C601                  		ADD		SI,1			; SIに1を足す
    85 000000B1 3C00                    		CMP		AL,0
    86 000000B3 7409                    		JE		fin
    87 000000B5 B40E                    		MOV		AH,0x0e			; 一文字表示ファンクション
    88 000000B7 BB0F00                  		MOV		BX,15			; カラーコード
    89 000000BA CD10                    		INT		0x10			; ビデオBIOS呼び出し
    90 000000BC EBEE                    		JMP		putloop
    91                                  fin:
    92 000000BE F4                      		HLT						; 何かあるまでCPUを停止させる
    93 000000BF EBFD                    		JMP		fin				; 無限ループ
    94                                  msg:
    95 000000C1 0A0A                    		DB		0x0a, 0x0a		; 改行を2つ
    96 000000C3 6C6F6164206572726F-     		DB		"load error"
    96 000000CC 72                 
    97 000000CD 0A                      		DB		0x0a			; 改行
    98 000000CE 00                      		DB		0
    99                                  
   100 000000CF 00<rept>                		times 0x01fe - ($-$$) DB 0
   101                                  
   102 000001FE 55AA                    		DB		0x55, 0xaa
